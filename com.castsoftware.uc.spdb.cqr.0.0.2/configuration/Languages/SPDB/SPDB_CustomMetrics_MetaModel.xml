<?xml version="1.0" encoding="utf-8" ?>
<metaModel  file_level="client" file_no="3">

    <category name="SPDB_CustomMetrics_C" id="2004000">
        <description>Custom category for additional properties on C/C++</description>
     
        <!-- SPDB 9-1-3 -->
        <property name="SPDBviolation9_1_3" type="integer" id="2004002">
            <description>SPDB-9-1-3: Initialize the variable while defining it(C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004251"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
          
          <!-- SPDB 12-2-5 -->
        <property name="SPDBviolation12_2_5" type="integer" id="2004004">
            <description>SPDB-12-2-5: Avoid return Pointer, because memory exists and is destroyed automatically at the end of the function bod (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004252"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
          
        <!-- SPDB 14-1-1 -->
        <property name="SPDBviolation14_1_1" type="integer" id="2004006">
            <description>SPDB-14-1-1: Once you apply for memory with malloc, you should immediately check whether the pointer value is NULL (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004253"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 14-1-5 -->
        <property name="SPDBviolation14_1_5" type="integer" id="2004008">
            <description>SPDB-14-1-5: Set the pointer to NULL immediately after freeing memory with free to prevent "wild Pointers" (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004254"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 10-3-1 -->
        <property name="SPDBviolation10_3_1" type="integer" id="2004010">
            <description>SPDB-10-3-1: Boolean variables cannot be compared directly to true, false, or 1, 0 (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004255"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 10-3-2 -->
        <property name="SPDBviolation10_3_2" type="integer" id="2004012">
            <description>SPDB-10-3-2: The integer variable should use  "==" or "! = " directly compared to 0 (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004256"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 10-3-3 -->
        <property name="SPDBviolation10_3_3" type="integer" id="2004014">
            <description>SPDB-10-3-3: Can not compare a floating point variable to any number with an “==”or "!=" (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004257"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 10-3-4 -->
        <property name="SPDBviolation10_3_4" type="integer" id="2004016">
            <description>SPDB-10-3-4: Pointer variables should use "==" or "! = "compared with NULL (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004258"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 16-2-10 -->
        <property name="SPDBviolation16_2_10" type="integer" id="2004018">
            <description>SPDB-16-2-10: Do not access freed memory (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004259"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 10-5-3 -->
        <property name="SPDBviolation10_5_3" type="integer" id="2004020">
            <description>SPDB-10-5-3: Each case branch of the switch statement should have comments (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004260"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>

                      
        <!-- SPDB 16-3-9 -->
        <property name="SPDBviolation16_3_9" type="integer" id="2004022">
            <description>SPDB-16-3-9: Security code to consider guarding against SQL injection vulnerabilities (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004261"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 9-4-2 -->
        <property name="SPDBviolation9_4_2" type="integer" id="2004024">
            <description>SPDB-9-4-2: You cannot convert a pointer to a non-pointer type or vice versa (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004262"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 16-2-12 -->
        <property name="SPDBviolation16_2_12" type="integer" id="2004026">
            <description>SPDB-16-2-12: Ensure that file handler/pointer will be closed as soon as they are no longer needed (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004263"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 16-3-17 -->
        <property name="SPDBviolation16_3_17" type="integer" id="2004028">
            <description>SPDB-16-3-17: Close and release file handle, heap memory, database cursor and other system resources in time to avoid system resource exhaustion attack (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004264"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 14-1-3 -->
        <property name="SPDBviolation14_1_3" type="integer" id="2004030">
            <description>SPDB-14-1-3: Avoid array or pointer indices that cross boundaries (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004265"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 5-2-1 -->
        <property name="SPDBviolation5_2_1" type="integer" id="2004032">
            <description>SPDB-5-2-1: To prevent duplicate references to header files, the #ifndef/#define/#endif structure should be used to create pre-processing blocks (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004266"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>
                      
        <!-- SPDB 14-1-4 -->
        <property name="SPDBviolation14_1_4" type="integer" id="2004034">
            <description>SPDB-14-1-4: Dynamic memory requests and releases must be matched to prevent memory leaks (C)</description>
            <attribute name="INF_TYPE" intValue="9"/>
            <attribute name="INF_SUB_TYPE" intValue="2004267"/>
            <attribute name="ACCESS_APPVIEW" intValue="1"/>
            <attribute name="ACCESS_CVS" intValue="1"/>
            <attribute name="ACCESS_HTML" intValue="1"/>
          </property>

    </category>

    <partialType name="C_FILE" >
        <inheritedCategory name="SPDB_CustomMetrics_C" />
        <inheritedCategory name="APM Client Language Artifacts"/>
    </partialType>              
    
     <partial_category name="CAST_MetricAssistant_WithMetrics_C_CPP">
        <inheritedCategory name="SPDB_CustomMetrics_C"/>
        <inheritedCategory name="APM Client Language Artifacts"/>
    </partial_category>

     
</metaModel>